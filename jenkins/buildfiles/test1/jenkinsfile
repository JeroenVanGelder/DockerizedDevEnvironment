node {
   
           def mvnHome      
        mvnHome = tool 'M3'
        // Get Artifactory server instance, defined in the Artifactory Plugin administration page.
        def server = Artifactory.server "artifactory-docker"
        // Create an Artifactory Maven instance.
        def rtMaven = Artifactory.newMavenBuild()
        def buildInfo
   
   stage('Git pull') {
      git 'https://github.com/JeroenVanGelder/ThemaOpdracht4.git'
   }
   stage('Build') {
        // Tool name from Jenkins configuration
        rtMaven.tool = "M3"
        // Set Artifactory repositories for dependencies resolution and artifacts deployment.
        rtMaven.deployer releaseRepo:'libs-release-local', snapshotRepo:'libs-snapshot-local', server: server
        rtMaven.resolver releaseRepo:'libs-release', snapshotRepo:'libs-snapshot', server: server
        buildInfo = rtMaven.run pom: 'pom.xml', goals: 'clean install -Dmaven.repo.local=.m2'
   }

   stage('Sonarqube') {
            withMaven(maven: 'M3') {
                 sh "mvn sonar:sonar" +
                 ' -Dsonar.host.url=http://sonarqube:9000'
              ' -Dsonar.language=java ' +
              ' -Dsonar.sources=src/main/java/nl/hu/to4/groep1/. '
            }
   }

    stage('Archive') {
        server.publishBuildInfo buildInfo
    }
}

